<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- ICON -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Sharp" rel="stylesheet">
    <link rel="stylesheet" href="/css/admin/admin.css">
    <link rel="stylesheet" href="/css/admin/listProductAdmin.css">

    <title>Payment Shop</title>
</head>

<body>
    <%- include('componentAdmin/notification') %>
    <div class="success" style="display: none;">
        <h2 id="successMessage"></h2>
    </div>

    <div class="error" style="display: none;">
        <h2 id="errorMessage"></h2>
    </div>

    <div class="container" id="container">
        <%- include('componentAdmin/sideBar') %>

        <!-- Main Content -->
        <main>
            <!-- New Product Section -->
            <div class="new-users">
                <h1>New Product</h1>
                <div class="user-list">

                    <div class="user">
                        <button onclick="openAddModal()" name="addButton" id="addButton"><img src="/images/plus.png"></button>
                        <h2>Add</h2>
                    </div>
                </div>
            </div>
            <!-- End of New Users Section -->

            <!-- Recent Orders Table -->
            <div class="recent-orders">
                <h1>List Product</h1>
                <table>
                    <thead>
                        <tr>
                            <th>Code Product</th>
                            <th>Name</th>
                            <th>Price Buy</th>
                            <th>Price Sell</th>
                            <th>Date Product</th>
                            <th>Option</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% list_product_admin.forEach(product=> { %>
                            <tr>
                                <td>
                                    <%= product.code_product %>
                                </td>
                                <td>
                                    <%= product.name_product %>
                                </td>
                                <td>
                                    <%= product.price_buy_product %>
                                </td>
                                <td>
                                    <%= product.price_sell_product %>
                                </td>
                                <td>
                                    <%= product.day_add_product.toDateString() %>
                                </td>
                                <td>
                                    <button style="background-color: rgb(0, 202, 44);" onclick="openEditModal(
                                        '<%= product._id %>', 
                                        '<%= product.code_product %>', 
                                        '<%= product.name_product %>', 
                                        '<%= product.price_buy_product %>', 
                                        '<%= product.price_sell_product %>', 
                                    )" name="editButton_<%= product.code_product %>" id="editButton_<%= product.code_product %>">Edit</button>
                                    <button style="background-color: rgb(250, 32, 32);" onclick="deleteProduct(
                                        '<%= product._id %>'
                                    )" name="deleteButton_<%= product.code_product %>" id="deleteButton_<%= product.code_product %>">Delete</button>
                                </td>
                            </tr>
                            <% }) %>
                    </tbody>
                </table>
            </div>
            <!-- End of Recent Orders -->
        </main>
        <!-- End of Main Content -->

        <%- include('componentAdmin/rightSection') %>
    </div>


    <!-- Model add new product -->
    <div id="addProductModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeAddModal()">&times;</span>
            <h1>Add New Product</h1>
            <form id="addForm">
                <span>Code Product</span>
                <input type="text" id="addCode" required><br>
                <span>Name Product</span>
                <input type="text" id="addName" required><br>
                <span>Price Buy</span> 
                <input type="number" id="addPriceBuy" required><br>
                <span>Price Sell</span> 
                <input type="number" id="addPriceSell" required><br>
                <button type="button" onclick="submitAddForm()" name="submitAddButton" id="submitAddButton">Add Product</button>
                <button type="button" onclick="closeAddModal()" style="background-color: rgb(255, 5, 5);" name="cancelAddButton" id="cancelAddButton">Cancel</button>
            </form>
        </div>
    </div>

    <!-- Modal edit -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeEditModal()">&times;</span>
            <h2>Edit Product</h2>
            <form id="editForm">
                <input type="hidden" id="productId">
                <span> Code Product</span>
                <input type="text" id="editCode" required><br>
                <span>Name Product</span> 
                <input type="text" id="editName" required><br>
                <span>Price Buy</span>
                <input type="text" id="editPriceBuy" required><br>
                <span>Price Sell</span> 
                <input type="text" id="editPriceSell" required><br>
                <button type="button" onclick="submitEditForm()" name="editAddButton" id="editAddButton">Save Changes</button>
                <button type="button" onclick="closeEditModal()" style="background-color: red;" name="cancelEditButton" id="cancelEditButton">Cancel</button>
            </form>
        </div>
    </div>

    <!-- Hiện thị model Add new product -->
    <script>
        function openAddModal() {
            document.getElementById('addProductModal').classList.add('active');
            document.body.classList.add('active');
            document.body.style.overflow = 'hidden'; 
            document.getElementById('overlay').style.display = 'block';
        }

        function closeAddModal() {
            document.getElementById('addProductModal').classList.remove('active');
            document.body.classList.remove('active');
            document.body.style.overflow = ''; 
            document.getElementById('overlay').style.display = 'none';
        }
    </script>

    <!-- Hieen thi Edit Modal -->
    <script>
        function openEditModal(id, code, name, priceBuy, priceSell, dayAdd) {
            document.getElementById('productId').value = id;
            document.getElementById('editCode').value = code;
            document.getElementById('editName').value = name;
            document.getElementById('editPriceBuy').value = priceBuy;
            document.getElementById('editPriceSell').value = priceSell;

            document.getElementById('editModal').style.display = 'block';
            document.body.classList.add('active');
            document.body.style.overflow = 'hidden'; 
            document.getElementById('overlay').style.display = 'block';
        }

        function closeEditModal() {
            document.getElementById('editModal').style.display = 'none';
            document.body.classList.remove('active');
            document.body.style.overflow = ''; 
            document.getElementById('overlay').style.display = 'none';
        }
    </script>

    <div id="overlay"></div>

    <script>
        async function submitAddForm() {
            const code = document.getElementById('addCode').value;
            const name = document.getElementById('addName').value;
            const priceBuy = document.getElementById('addPriceBuy').value;
            const priceSell = document.getElementById('addPriceSell').value;
    
            if (code && name && priceBuy && priceSell) {
                try {
                    const response = await fetch('/admin/add-product', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            code_product: code,
                            name_product: name,
                            price_buy_product: priceBuy,
                            price_sell_product: priceSell,
                        })
                    });
        
                    if (response.ok) {
                        closeAddModal();
                        const result = await response.json();
                        showSuccessMessageAndReload(result.message);
                    } else {
                        closeAddModal();
                        const result = await response.json();
                        showErrorMessage(result.message);
                    }
                } catch (err) {
                    console.error(err);
                }
            } else {
                alert('Please fill in all fields.'); 
            }
        }
    </script>
    
    <!-- Edit san pham -->
    <script>
        async function submitEditForm() {
            const id = document.getElementById('productId').value;
            const code = document.getElementById('editCode').value;
            const name = document.getElementById('editName').value;
            const priceBuy = document.getElementById('editPriceBuy').value;
            const priceSell = document.getElementById('editPriceSell').value;
    
            if (id && code && name && priceBuy && priceSell) {
                try {
                    const response = await fetch(`/admin/edit-product/${id}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            code_product: code,
                            name_product: name,
                            price_buy_product: priceBuy,
                            price_sell_product: priceSell,
                        })
                    });
        
                    if (response.ok) {
                        closeEditModal();
                        const result = await response.json();
                        showSuccessMessageAndReload(result.message);
                    } else {
                        closeAddModal();
                        const result = await response.json();
                        showErrorMessage(result.message);
                    }
                } catch (err) {
                    console.error(err);
                }
            } else {
                alert('Please fill in all fields.'); 
            }
        }
    </script>
    
    <!-- Delete san pham -->
    <script>
        async function deleteProduct(id) {
            try {
                const response = await fetch(`/admin/delete-product/${id}`, {
                    method: 'DELETE'
                });
    
                if (response.ok) {
                    const result = await response.json();
                    showSuccessMessageAndReload(result.message);
                } else {
                    const result = await response.json();
                    showErrorMessage(result.message);
                }
            } catch (err) {
                console.error(err);
            }
        }
    </script>
    
    <script>
        async function showSuccessMessageAndReload(message) {
            const successMessageElement = document.getElementById('successMessage');
            const successDiv = document.querySelector('.success');

            successMessageElement.textContent = message;
            successDiv.style.display = 'block';

            await new Promise((resolve) => setTimeout(resolve, 3000)); 
            window.location.reload();
        }

        async function showErrorMessage(message) {
            const errorMessageElement = document.getElementById('errorMessage');
            const errorDiv = document.querySelector('.error');

            errorMessageElement.textContent = message;
            errorDiv.style.display = 'block';

            await new Promise((resolve) => setTimeout(resolve, 3000));
            errorDiv.style.display = 'none';
        }
    </script>
</body>

</html>